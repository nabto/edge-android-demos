name: Continuous Integration
on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build:
    name: Build apps
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1

      - name: JDK Setup
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: GStreamer setup
        run: |
          wget https://gstreamer.freedesktop.org/data/pkg/android/1.22.1/gstreamer-1.0-android-universal-1.22.1.tar.xz
          mkdir gstreamer
          tar -xf gstreamer-1.0-android-universal-1.22.1.tar.xz -C gstreamer
          echo "GSTREAMER_ROOT_ANDROID=$(pwd)/gstreamer" >> $GITHUB_ENV

      - name: Assemble unsigned APKs
        run: ./gradlew assembleRelease --no-daemon --refresh-dependencies

      - name: Get tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          set -x
          echo "VERSION_TAG=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV

      - name: Move APKs to shared directory
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          set -e
          mkdir output
          mv thermostat/build/outputs/apk/release/thermostat-release-unsigned.apk output/thermostat.apk
          mv tunnelhttp/build/outputs/apk/release/tunnelhttp-release-unsigned.apk output/tunnelhttp.apk
          mv tunnelvideo/build/outputs/apk/release/tunnelvideo-release-unsigned.apk output/tunnelvideo.apk

      - name: Sign APKs
        if: startsWith(github.ref, 'refs/tags/')
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: output
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: ${{ env.VERSION_TAG }}
          files: |
            ${{ steps.sign_app.signedReleaseFile0 }}
            ${{ steps.sign_app.signedReleaseFile1 }}
            ${{ steps.sign_app.signedReleaseFile2 }}
          draft: true
          prelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
